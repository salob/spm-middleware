---
# This is a basic workflow to help you get started with Actions
name: release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  # but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs
# that can run sequentially or in parallel
jobs:
  release:
    env:
      collection_namespace: merative
      collection_name: spm_middleware
      python_ver: 3.8
      version: 1.1.8
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ansible_collections/${{ env.collection_namespace }}/${{ env.collection_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ansible_collections/${{ env.collection_namespace }}/${{ env.collection_name }}
      - name: Setup Python v${{ env.python_ver }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_ver }}

      - name: Setup Python Cache
        uses: actions/cache@v2
        with:
          key: pip-${{ matrix.scenario }}-${{ hashFiles('ci-requirements.txt') }}
          path: |
            ~/.cache/pip
            !~/.cache/pip/log/debug.log
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r ci-requirements.txt
      - name: Prepare environment
        run: |
          mkdir -pv ~/.ansible/collections/${{ env.collection_namespace }}
          ln -s ansible_collections/${{ env.collection_namespace }}/${{ env.collection_name }} ~/.ansible/collections/${{ env.collection_namespace }}/${{ env.collection_name }}
          chmod -v +x ./scripts/*
      - name: Publish to Galaxy
        env:
          ANSIBLE_GALAXY_SERVER_LIST: release
          ANSIBLE_GALAXY_SERVER_RELEASE_URL: https://galaxy.ansible.com/
          ANSIBLE_GALAXY_SERVER_RELEASE_TOKEN: "${{ secrets.GALAXY_TOKEN }}"
        run: |
          ansible-galaxy collection build
          ls -l *.tar.gz
          ansible-galaxy collection publish -c -vvv "./${{ env.collection_namespace }}-${{ env.collection_name }}-${{ env.version }}.tar.gz"
      - name: Create GitHub Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            ${{ env.collection_namespace }}-${{ env.collection_name }}-${{ env.version }}.tar.gz
