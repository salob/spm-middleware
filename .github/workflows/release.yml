---
# This is a basic workflow to help you get started with Actions
name: release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  # but only for the main branch
  push:
    branches: [sian/multi-db2copies]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs
# that can run sequentially or in parallel
jobs:
  release:
    env:
      python_ver: 3.8
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ansible_collections
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ansible_collections
      - name: Setup Python v${{ env.python_ver }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_ver }}
      - name: Setup Python Cache
        uses: actions/cache@v2
        with:
          key: pip-${{ matrix.scenario }}-${{ hashFiles('ci-requirements.txt') }}
          path: |
            ~/.cache/pip
            !~/.cache/pip/log/debug.log
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r ci-requirements.txt
      - name: Prepare environment
        run: |
          chmod -v +x ./scripts/*
      - name: Publish to Galaxy
        run: |
          echo "COLLECTION_VERSION=$(yq r galaxy.yml version)" >> $GITHUB_ENV
          ansible-galaxy collection build
          echo "COLLECTION_ARCHIVE=$(ls ./*tar.gz)" >> $GITHUB_ENV
          #export collection_archive=`ls ./*tar.gz`
          echo $COLLECTION_VERSION
          echo $COLLECTION_ARCHIVE
          ansible-galaxy collection publish --token "${{ secrets.GALAXY_TOKEN }}" -c -vvv $COLLECTION_ARCHIVE
      - name: Create GitHub Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          version: $COLLECTION_VERSION
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            $COLLECTION_ARCHIVE
